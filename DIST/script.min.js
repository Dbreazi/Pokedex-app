let pokemonRepo = (function () {
  let e = [];
  function t(t) {
    "object" == typeof t && "name" in t
      ? e.push(t)
      : console.error("pokemon is not correct");
  }
  function n() {
    return e;
  }
  let i = document.querySelector(".modal");
  function l() {
    i.classList.remove("is-visible");
  }
  return (
    window.addEventListener("keydown", (e) => {
      "Escape" === e.key && i.classList.contains("is-visible") && l();
    }),
    i.addEventListener("click", (e) => {
      e.target === i && l();
    }),
    {
      add: t,
      getAll: n,
      addListItem: function e(t) {
        let n = document.querySelector(".pokemon-list"),
          i = document.createElement("li"),
          l = document.createElement("button");
        (l.innerText = t.name),
          l.classList.add("btn-primary", "btn-block", "btn-lg", "mb-3"),
          l.setAttribute("data-target", "#exampleModal"),
          l.setAttribute("data-toggle", "modal"),
          i.appendChild(l),
          n.appendChild(i),
          (function e(t, n) {
            t.addEventListener("click", function () {
              (function e(t) {
                pokemonRepo.loadDetails(t).then(function () {
                  (function e(t) {
                    let n = document.querySelector(".modal-body"),
                      i = document.querySelector(".modal-header");
                    n.innerHTML = "";
                    let l = document.querySelector(".modal-title");
                    l.textContent = t.name;
                    let o = document.querySelector(".close"),
                      a = document.createElement("img");
                    a.classList.add("modal-img"),
                      (a.src = t.imageUrl),
                      (a.alt = "image of" + t.name);
                    let r = document.createElement("p"),
                      c = [t.types[0].type.name];
                    for (let s = 1; s < t.types.length; s++)
                      c.push(", " + t.types[s].type.name);
                    r.innerHTML = "Types:" + c.join("");
                    let p = document.createElement("p");
                    p.innerHTML = "Height:" + t.height;
                    let d = document.createElement("p");
                    d.innerHTML = "Weight:" + t.weight;
                    let m = document.createElement("p"),
                      u = [t.abilities[0].ability.name];
                    for (let h = 1; h < t.abilities.length; h++)
                      u.push(", " + t.abilities[h].ability.name);
                    (m.innerHTML = "Abilities:" + u.join("")),
                      i.appendChild(l),
                      i.appendChild(o),
                      n.appendChild(a),
                      n.appendChild(r),
                      n.appendChild(p),
                      n.appendChild(d),
                      n.appendChild(m);
                  })(t);
                });
              })(n);
            });
          })(l, t);
      },
      loadList: function e() {
        return fetch("https://pokeapi.co/api/v2/pokemon/?limit=150")
          .then(function (e) {
            return e.json();
          })
          .then(function (e) {
            e.results.forEach(function (e) {
              let n = { name: e.name, detailsUrl: e.url };
              t(n), console.log(n);
            });
          })
          .catch(function (e) {
            console.error(e);
          });
      },
      loadDetails: function e(t) {
        return fetch(t.detailsUrl)
          .then(function (e) {
            return e.json();
          })
          .then(function (e) {
            (t.imageUrl = e.sprites.front_default),
              (t.height = e.height),
              (t.types = e.types),
              (t.weight = e.weight),
              (t.abilities = e.abilities);
          })
          .catch(function (e) {
            console.error(e);
          });
      },
    }
  );
})();
pokemonRepo.loadList().then(function () {
  pokemonRepo.getAll().forEach(function (e) {
    pokemonRepo.addListItem(e);
  });
});
